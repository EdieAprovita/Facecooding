{"version":3,"sources":["actions/alert.js","actions/types.js","actions/auth.js","components/Layout/Navbar.js","components/Layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/dashbord/DashboardActions.js","actions/profile.js","components/dashbord/Experience.js","components/dashbord/Education.js","components/dashbord/Dashbord.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/Post.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","utils/setAuthToken.js","store.js","App.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","loadUser","a","axios","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","Landing","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","required","minLength","DashboardActions","getCurrentProfile","statusText","status","deleteExperience","delete","experience","experiences","map","exp","key","_id","company","title","format","moment","utc","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","initialState","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","withRouter","displaySocialInputs","toggleSocialInputs","profileData","social","Array","isArray","join","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","src","alt","slice","skill","index","getProfiles","profiles","length","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","ProfileTop","rel","getProfileById","userId","match","nullProfile","params","ProfileGithub","username","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","deleteComment","postId","commentId","comment","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","NotFound","token","localStorage","getItem","repos","combineReducers","alert","action","filter","setAuthToken","defaults","common","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","subscribe","previousState","getState","App","ReactDOM","document","getElementById"],"mappings":"uVAGaA,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAACC,GAC3D,IAAMC,EAAKC,cACXF,EAAS,CACPG,KCNqB,YDOrBC,QAAS,CAAEP,MAAKC,YAAWG,QAG7BI,YAAW,kBAAML,EAAS,CAAEG,KCTF,eDSsBC,QAASH,MAAOF,KEIrDO,EAAW,yDAAM,WAAON,GAAP,eAAAO,EAAA,+EAERC,IAAMC,IAAI,aAFF,OAEpBC,EAFoB,OAI1BV,EAAS,CACPG,KDfqB,cCgBrBC,QAASM,EAAIC,OANW,gDAS1BX,EAAS,CACPG,KDnBoB,eCSI,yDAAN,uDCqDTS,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAEC,OD0BpB,kBAAM,SAACf,GAC3BA,EAAS,CAAEG,KDhFgB,kBCiF3BH,EAAS,CAAEG,KDvFS,cE2DPS,EA7DA,SAAC,GAAoD,IAAD,IAAjDE,KAAQE,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,QAAWF,EAAa,EAAbA,OAC9CG,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,aAAT,gBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cACP,uBAAGC,UAAU,gBAAiB,IAC9B,0BAAMA,UAAU,WAAhB,eAGJ,4BACE,uBAAGC,QAASN,EAAQO,KAAK,MACvB,uBAAGF,UAAU,wBAAyB,IACtC,0BAAMA,UAAU,WAAhB,aAMFG,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMJ,GAAG,aAAT,gBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAKN,OACE,yBAAKC,UAAU,kBACb,4BACE,kBAAC,IAAD,CAAMD,GAAG,KACP,uBAAGC,UAAU,iBADf,kBAIAH,GACA,kBAAC,WAAD,KAAWD,EAAkBE,EAAYK,OCzBlCC,EAxBC,WACd,OACE,6BAASJ,UAAU,WACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,WAAd,iCACA,uBAAGA,UAAU,QAAb,gCAC+B,6BAD/B,yBAEwB,6BAFxB,0BAIA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,mBAA/B,WAGA,kBAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,iBAA5B,c,uBCkFGR,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAEpB,WAAU6B,SHrE5B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAO5B,GAAP,qBAAAO,EAAA,6DAC/CsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAIdC,EAAOC,KAAKC,UAAU,CAAEP,OAAMC,QAAOC,aAPU,kBAUjCpB,IAAM0B,KAAK,aAAcH,EAAMF,GAVE,OAU7CnB,EAV6C,OAYnDV,EAAS,CACPG,KDzC0B,mBC0C1BC,QAASM,EAAIC,OAEfX,EAASM,KAhB0C,mDAkB7C6B,EAAS,KAAIC,SAASzB,KAAKwB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWtC,EAASJ,EAAS0C,EAAMzC,IAAK,cAGzDG,EAAS,CACPG,KDpDuB,kBC2B0B,0DAA/B,wDGqETS,EA5FE,SAAC,GAA6C,IAA3ChB,EAA0C,EAA1CA,SAAU6B,EAAgC,EAAhCA,SAAUT,EAAsB,EAAtBA,gBAAsB,EAC5BuB,mBAAS,CACvCb,KAAM,GACNC,MAAO,GACPC,SAAU,GACVY,UAAW,KAL+C,mBACrDC,EADqD,KAC3CC,EAD2C,KAQpDhB,EAAqCe,EAArCf,KAAMC,EAA+Bc,EAA/Bd,MAAOC,EAAwBa,EAAxBb,SAAUY,EAAcC,EAAdD,UAEzBG,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOnB,KAAOkB,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAOH,GAAP,SAAArC,EAAA,sDACfqC,EAAEI,iBACEpB,IAAaY,EACf5C,EAAS,yBAA0B,UAEnC6B,EAAS,CAAEC,OAAMC,QAAOC,aALX,2CAAH,sDASd,OAAIZ,EACK,kBAAC,IAAD,CAAUG,GAAG,eAIpB,kBAAC,WAAD,KACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,wBAGA,0BAAMA,UAAU,OAAO2B,SAAU,SAACH,GAAD,OAAOG,EAASH,KAC/C,yBAAKxB,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,OACZvB,KAAK,OACLoB,MAAOpB,EACPiB,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKxB,UAAU,cACb,2BACEjB,KAAK,QACL8C,YAAY,gBACZvB,KAAK,QACLoB,MAAOnB,EACPgB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOxB,UAAU,aAAjB,iFAKF,yBAAKA,UAAU,cACb,2BACEjB,KAAK,WACL8C,YAAY,WACZvB,KAAK,WACLoB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKxB,UAAU,cACb,2BACEjB,KAAK,WACL8C,YAAY,mBACZvB,KAAK,YACLoB,MAAON,EACPG,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAOzC,KAAK,SAASiB,UAAU,kBAAkB0B,MAAM,cAEzD,uBAAG1B,UAAU,QAAb,4BAC2B,kBAAC,IAAD,CAAMD,GAAG,UAAT,gBCZlBP,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAEkC,MJVrB,SAACvB,EAAOC,GAAR,8CAAqB,WAAO5B,GAAP,qBAAAO,EAAA,6DAClCsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAIdC,EAAOC,KAAKC,UAAU,CAAEN,QAAOC,aAPG,kBAUpBpB,IAAM0B,KAAK,YAAaH,EAAMF,GAVV,OAUhCnB,EAVgC,OAYtCV,EAAS,CACPG,KDpEuB,gBCqEvBC,QAASM,EAAIC,OAGfX,EAASM,KAjB6B,mDAmBhC6B,EAAS,KAAIC,SAASzB,KAAKwB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWtC,EAASJ,EAAS0C,EAAMzC,IAAK,cAGzDG,EAAS,CACPG,KDhFoB,eCsDgB,0DAArB,wDIUNS,EAjED,SAAC,GAAgC,IAA9BsC,EAA6B,EAA7BA,MAAOlC,EAAsB,EAAtBA,gBAAsB,EACZuB,mBAAS,CACvCZ,MAAO,GACPC,SAAU,KAHgC,mBACrCa,EADqC,KAC3BC,EAD2B,KAMpCf,EAAoBc,EAApBd,MAAOC,EAAaa,EAAbb,SAETe,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOnB,KAAOkB,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAOH,GAAP,SAAArC,EAAA,sDACfqC,EAAEI,iBACFE,EAAMvB,EAAOC,GAFE,2CAAH,sDAKd,OAAIZ,EACK,kBAAC,IAAD,CAAUG,GAAG,eAIpB,kBAAC,WAAD,KACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,2BAGA,0BAAMA,UAAU,OAAO2B,SAAU,SAACH,GAAD,OAAOG,EAASH,KAC/C,yBAAKxB,UAAU,cACb,2BACEjB,KAAK,QACL8C,YAAY,gBACZvB,KAAK,QACLoB,MAAOnB,EACPgB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,KAGZ,yBAAK/B,UAAU,cACb,2BACEjB,KAAK,WACL8C,YAAY,WACZvB,KAAK,WACLoB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BQ,UAAU,OAGd,2BAAOjD,KAAK,SAASiB,UAAU,kBAAkB0B,MAAM,WAEzD,uBAAG1B,UAAU,QAAb,0BACyB,kBAAC,IAAD,CAAMD,GAAG,aAAT,gB,iBCrChBkC,EAhBU,WACvB,OACE,yBAAKjC,UAAU,gBACb,kBAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,iBACjC,uBAAGA,UAAU,oCADf,iBAGA,kBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,iBACnC,uBAAGA,UAAU,kCADf,mBAGA,kBAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,iBAClC,uBAAGA,UAAU,uCADf,oB,iCCGOkC,EAAoB,yDAAM,WAAOtD,GAAP,eAAAO,EAAA,+EAEjBC,IAAMC,IAAI,mBAFO,OAE7BC,EAF6B,OAInCV,EAAS,CACPG,KPXqB,cOYrBC,QAASM,EAAIC,OANoB,gDASnCX,EAAS,CACPG,KPVuB,gBOWvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAX7B,yDAAN,uDCuClB5C,cAAQ,KAAM,CAAE6C,iBDqIC,SAACxD,GAAD,8CAAQ,WAAOD,GAAP,eAAAO,EAAA,+EAElBC,IAAMkD,OAAN,kCAAwCzD,IAFtB,OAE9BS,EAF8B,OAIpCV,EAAS,CACPG,KPnLwB,iBOoLxBC,QAASM,EAAIC,OANqB,gDASpCX,EAAS,CACPG,KPtLuB,gBOuLvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAX5B,yDAAR,wDCrIjB5C,EA/CI,SAAC,GAAsC,IAApC+C,EAAmC,EAAnCA,WAAYF,EAAuB,EAAvBA,iBAC1BG,EAAcD,EAAWE,KAAI,SAACC,GAAD,OACjC,wBAAIC,IAAKD,EAAIE,KACX,4BAAKF,EAAIG,SACT,wBAAI7C,UAAU,WAAW0C,EAAII,OAC7B,4BACE,kBAAC,IAAD,CAAQC,OAAO,cAAcC,IAAOC,IAAIP,EAAIQ,OAD9C,KACgE,IAClD,OAAXR,EAAI3C,GACH,OAEA,kBAAC,IAAD,CAAQgD,OAAO,cAAcC,IAAOC,IAAIP,EAAI3C,MAGhD,4BACE,4BACEE,QAAS,kBAAMoC,EAAiBK,EAAIE,MACpC5C,UAAU,kBAFZ,eAUN,OACE,kBAAC,WAAD,KACE,wBAAIA,UAAU,QAAd,0BACA,2BAAOA,UAAU,SACf,+BACE,4BACE,uCACA,wBAAIA,UAAU,WAAd,SACA,wBAAIA,UAAU,WAAd,SACA,+BAGJ,+BAAQwC,QCWDhD,cAAQ,KAAM,CAAE2D,gBFsJA,SAACtE,GAAD,8CAAQ,WAAOD,GAAP,eAAAO,EAAA,+EAEjBC,IAAMkD,OAAN,iCAAuCzD,IAFtB,OAE7BS,EAF6B,OAInCV,EAAS,CACPG,KPpMwB,iBOqMxBC,QAASM,EAAIC,OAGfX,EAASJ,EAAS,oBAAqB,YATJ,gDAWnCI,EAAS,CACPG,KPzMuB,gBO0MvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAb7B,yDAAR,wDEtJhB5C,EA/CG,SAAC,GAAoC,IAAlC4D,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBACxBE,EAAaD,EAAUX,KAAI,SAACa,GAAD,OAC/B,wBAAIX,IAAKW,EAAIV,KACX,4BAAKU,EAAIC,QACT,wBAAIvD,UAAU,WAAWsD,EAAIE,QAC7B,4BACE,kBAAC,IAAD,CAAQT,OAAO,cAAcC,IAAOC,IAAIK,EAAIJ,OAD9C,KACgE,IAClD,OAAXI,EAAIvD,GACH,OAEA,kBAAC,IAAD,CAAQgD,OAAO,cAAcC,IAAOC,IAAIK,EAAIvD,MAGhD,4BACE,4BACEE,QAAS,kBAAMkD,EAAgBG,EAAIV,MACnC5C,UAAU,kBAFZ,eAUN,OACE,kBAAC,WAAD,KACE,wBAAIA,UAAU,QAAd,yBACA,2BAAOA,UAAU,SACf,+BACE,4BACE,sCACA,wBAAIA,UAAU,WAAd,UACA,wBAAIA,UAAU,WAAd,SACA,+BAGJ,+BAAQqD,QCkBD7D,eALS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZ+D,QAAShE,EAAMgE,WAGuB,CAAEvB,oBAAmBwB,cHkKhC,yDAAM,WAAO9E,GAAP,SAAAO,EAAA,0DAC7BwE,OAAOC,QAAQ,yCADc,0CAGvBxE,IAAMkD,OAAO,gBAHU,OAK7B1D,EAAS,CAAEG,KPtNY,kBOuNvBH,EAAS,CAAEG,KPrNc,oBOuNzBH,EAASJ,EAAS,8CARW,gDAU7BI,EAAS,CACPG,KP3NqB,gBO4NrBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAZnC,yDAAN,wDGlKd5C,EApDG,SAAC,GAKZ,IAJL0C,EAII,EAJJA,kBACAwB,EAGI,EAHJA,cACQG,EAEJ,EAFJnE,KAAQmE,KACGJ,EACP,EADJA,QAAWA,QAMX,OAJAK,qBAAU,WACR5B,MACC,CAACA,IAGF,kBAAC,WAAD,KACE,wBAAIlC,UAAU,sBAAd,aACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,YACyC6D,GAAQA,EAAKvD,MAEzC,OAAZmD,EACC,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYlB,WAAYkB,EAAQlB,aAChC,kBAAC,EAAD,CAAWa,UAAWK,EAAQL,YAE9B,yBAAKpD,UAAU,QACb,4BAAQA,UAAU,iBAAiBC,QAAS,kBAAMyD,MAChD,uBAAG1D,UAAU,sBADf,wBAMJ,kBAAC,WAAD,KACE,qFACA,kBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,wBAArC,uBClCJ+D,EAAe,CACnBlB,QAAS,GACTmB,QAAS,GACTC,SAAU,GACV7B,OAAQ,GACR8B,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,IA4OEjF,eAJS,SAACC,GAAD,MAAY,CAClCgE,QAAShE,EAAMgE,WAGuB,CAAEiB,cJ1Kb,SAACrD,EAAUsD,GAAX,IAAoBC,EAApB,sGAAqC,WAChEhG,GADgE,mBAAAO,EAAA,sEAIxDsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAN0C,SAU5CtB,IAAM0B,KAAK,eAAgBO,EAAUZ,GAVO,OAUxDnB,EAVwD,OAY9DV,EAAS,CACPG,KPxFqB,cOyFrBC,QAASM,EAAIC,OAGfX,EAASJ,EAASoG,EAAO,kBAAoB,kBAAmB,YAE3DA,GACHD,EAAQE,KAAK,cApB+C,mDAuBxD9D,EAAS,KAAIC,SAASzB,KAAKwB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWtC,EAASJ,EAAS0C,EAAMzC,IAAK,cAGzDG,EAAS,CACPG,KPnGuB,gBOoGvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UA/BF,0DAArC,uDI0K4BF,qBAA1C1C,CACbsF,aA1OkB,SAAC,GAKd,IAAD,IAJJrB,QAAWA,EAIP,EAJOA,QAAS5D,EAIhB,EAJgBA,QACpB6E,EAGI,EAHJA,cACAxC,EAEI,EAFJA,kBACAyC,EACI,EADJA,QACI,EAC4BxD,mBAAS4C,GADrC,mBACG1C,EADH,KACaC,EADb,OAG8CH,oBAAS,GAHvD,mBAGG4D,EAHH,KAGwBC,EAHxB,KAKJlB,qBAAU,WAER,GADKL,GAASvB,KACTrC,GAAW4D,EAAS,CACvB,IAAMwB,EAAW,eAAQlB,GACzB,IAAK,IAAMpB,KAAOc,EACZd,KAAOsC,IAAaA,EAAYtC,GAAOc,EAAQd,IAErD,IAAK,IAAMA,KAAOc,EAAQyB,OACpBvC,KAAOsC,IAAaA,EAAYtC,GAAOc,EAAQyB,OAAOvC,IAExDwC,MAAMC,QAAQH,EAAYf,UAC5Be,EAAYf,OAASe,EAAYf,OAAOmB,KAAK,OAC/C/D,EAAY2D,MAEb,CAACpF,EAASqC,EAAmBuB,IAnB5B,IAsBFZ,EAYExB,EAZFwB,QACAmB,EAWE3C,EAXF2C,QACAC,EAUE5C,EAVF4C,SACA7B,EASEf,EATFe,OACA8B,EAQE7C,EARF6C,OACAC,EAOE9C,EAPF8C,eACAC,EAME/C,EANF+C,IACAC,EAKEhD,EALFgD,QACAC,EAIEjD,EAJFiD,SACAC,EAGElD,EAHFkD,SACAC,EAEEnD,EAFFmD,QACAC,EACEpD,EADFoD,UAGIlD,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOnB,KAAOkB,EAAEC,OAAOC,UAOvD,OACE,kBAAC,WAAD,KACE,wBAAI1B,UAAU,sBAAd,qBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,qCAGA,qDACA,0BAAMA,UAAU,OAAO2B,SAZV,SAACH,GAChBA,EAAEI,iBACF8C,EAAcrD,EAAUsD,IAASlB,KAW7B,yBAAKzD,UAAU,cACb,4BAAQM,KAAK,SAASoB,MAAOU,EAAQb,SAAUA,GAC7C,gEACA,4BAAQG,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAO1B,UAAU,aAAjB,uDAIF,yBAAKA,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,UACZvB,KAAK,UACLoB,MAAOmB,EACPtB,SAAUA,IAEZ,2BAAOvB,UAAU,aAAjB,kDAIF,yBAAKA,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,UACZvB,KAAK,UACLoB,MAAOsC,EACPzC,SAAUA,IAEZ,2BAAOvB,UAAU,aAAjB,2CAIF,yBAAKA,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,WACZvB,KAAK,WACLoB,MAAOuC,EACP1C,SAAUA,IAEZ,2BAAOvB,UAAU,aAAjB,4CAIF,yBAAKA,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,WACZvB,KAAK,SACLoB,MAAOwC,EACP3C,SAAUA,IAEZ,2BAAOvB,UAAU,aAAjB,oEAIF,yBAAKA,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,kBACZvB,KAAK,iBACLoB,MAAOyC,EACP5C,SAAUA,IAEZ,2BAAOvB,UAAU,aAAjB,2EAKF,yBAAKA,UAAU,cACb,8BACE6B,YAAY,0BACZvB,KAAK,MACLoB,MAAO0C,EACP7C,SAAUA,IAEZ,2BAAOvB,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEC,QAAS,kBAAM+E,GAAoBD,IACnChG,KAAK,SACLiB,UAAU,iBAHZ,4BAOA,2CAGD+E,GACC,kBAAC,WAAD,KACE,yBAAK/E,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEjB,KAAK,OACL8C,YAAY,cACZvB,KAAK,UACLoB,MAAO2C,EACP9C,SAAUA,KAId,yBAAKvB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEjB,KAAK,OACL8C,YAAY,eACZvB,KAAK,WACLoB,MAAO4C,EACP/C,SAAUA,KAId,yBAAKvB,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEjB,KAAK,OACL8C,YAAY,cACZvB,KAAK,UACLoB,MAAO8C,EACPjD,SAAUA,KAId,yBAAKvB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEjB,KAAK,OACL8C,YAAY,eACZvB,KAAK,WACLoB,MAAO6C,EACPhD,SAAUA,KAId,yBAAKvB,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACEjB,KAAK,OACL8C,YAAY,gBACZvB,KAAK,YACLoB,MAAO+C,EACPlD,SAAUA,MAMlB,2BAAOxC,KAAK,SAASiB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBC/GOP,cAAQ,KAAM,CAAE8F,cLJF,SAACjE,EAAUsD,GAAX,8CAAuB,WAAO/F,GAAP,mBAAAO,EAAA,sEAE1CsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAJ4B,SAQ9BtB,IAAMmG,IAAI,0BAA2BlE,EAAUZ,GARjB,OAQ1CnB,EAR0C,OAUhDV,EAAS,CACPG,KPvHwB,iBOwHxBC,QAASM,EAAIC,OAGfX,EAASJ,EAAS,mBAAoB,YAEtCmG,EAAQE,KAAK,cAjBmC,mDAmB1C9D,EAAS,KAAIC,SAASzB,KAAKwB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWtC,EAASJ,EAAS0C,EAAMzC,IAAK,cAGzDG,EAAS,CACPG,KPpIuB,gBOqIvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UA3BhB,0DAAvB,wDKId5C,CAAiCsF,aAvH1B,SAAC,GAAgC,IAA9BQ,EAA6B,EAA7BA,cAAeX,EAAc,EAAdA,QAAc,EACpBxD,mBAAS,CACvC0B,QAAS,GACTC,MAAO,GACPmB,SAAU,GACVf,KAAM,GACNnD,GAAI,GACJyF,SAAS,EACTC,YAAa,KARqC,mBAC7CpE,EAD6C,KACnCC,EADmC,OAWXH,oBAAS,GAXE,mBAW7CuE,EAX6C,KAW7BC,EAX6B,KAa5C9C,EAA6DxB,EAA7DwB,QAASC,EAAoDzB,EAApDyB,MAAOmB,EAA6C5C,EAA7C4C,SAAUf,EAAmC7B,EAAnC6B,KAAMnD,EAA6BsB,EAA7BtB,GAAIyF,EAAyBnE,EAAzBmE,QAASC,EAAgBpE,EAAhBoE,YAE/ClE,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOnB,KAAOkB,EAAEC,OAAOC,UAEvD,OACE,kBAAC,WAAD,KACE,wBAAI1B,UAAU,sBAAd,qBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,0EAIA,qDACA,0BACEA,UAAU,OACV2B,SAAU,SAACH,GACTA,EAAEI,iBACF0D,EAAcjE,EAAUsD,KAG1B,yBAAK3E,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,cACZvB,KAAK,QACLoB,MAAOoB,EACPvB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,KAGZ,yBAAK/B,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,YACZvB,KAAK,UACLoB,MAAOmB,EACPtB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,KAGZ,yBAAK/B,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,WACZvB,KAAK,WACLoB,MAAOuC,EACP1C,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKxB,UAAU,cACb,yCACA,2BACEjB,KAAK,OACLuB,KAAK,OACLoB,MAAOwB,EACP3B,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKxB,UAAU,cACb,2BACE,2BACEjB,KAAK,WACLuB,KAAK,UACLsF,QAASJ,EACT9D,MAAO8D,EACPjE,SAAU,WACRD,EAAY,eAAKD,EAAN,CAAgBmE,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,gBAcF,yBAAK1F,UAAU,cACb,uCACA,2BACEjB,KAAK,OACLuB,KAAK,KACLoB,MAAO3B,EACPwB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BqE,SAAUH,EAAiB,WAAa,MAG5C,yBAAK1F,UAAU,cACb,8BACEM,KAAK,cACLwF,KAAK,KACLC,KAAK,IACLlE,YAAY,kBACZH,MAAO+D,EACPlE,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAOzC,KAAK,SAASiB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBCYOP,cAAQ,KAAM,CAAEwG,aN6BH,SAAC3E,EAAUsD,GAAX,8CAAuB,WAAO/F,GAAP,mBAAAO,EAAA,sEAEzCsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAJ2B,SAQ7BtB,IAAMmG,IAAI,yBAA0BlE,EAAUZ,GARjB,OAQzCnB,EARyC,OAU/CV,EAAS,CACPG,KPxJwB,iBOyJxBC,QAASM,EAAIC,OAGfX,EAASJ,EAAS,kBAAmB,YAErCmG,EAAQE,KAAK,cAjBkC,mDAmBzC9D,EAAS,KAAIC,SAASzB,KAAKwB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWtC,EAASJ,EAAS0C,EAAMzC,IAAK,cAGzDG,EAAS,CACPG,KPrKuB,gBOsKvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UA3BjB,0DAAvB,wDM7Bb5C,CAAgCsF,aAvH1B,SAAC,GAA+B,IAA7BkB,EAA4B,EAA5BA,aAAcrB,EAAc,EAAdA,QAAc,EAClBxD,mBAAS,CACvCoC,OAAQ,GACRC,OAAQ,GACRyC,aAAc,GACd/C,KAAM,GACNnD,GAAI,GACJyF,SAAS,EACTC,YAAa,KARmC,mBAC3CpE,EAD2C,KACjCC,EADiC,KAYhDiC,EAOElC,EAPFkC,OACAC,EAMEnC,EANFmC,OACAyC,EAKE5E,EALF4E,aACA/C,EAIE7B,EAJF6B,KACAnD,EAGEsB,EAHFtB,GACA0F,EAEEpE,EAFFoE,YACAD,EACEnE,EADFmE,QAGIjE,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOnB,KAAOkB,EAAEC,OAAOC,UAEvD,OACE,kBAAC,WAAD,KACE,wBAAI1B,UAAU,sBAAd,sBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,sDAIA,qDACA,0BACEA,UAAU,OACV2B,SAAU,SAACH,GACTA,EAAEI,iBACFoE,EAAa3E,EAAUsD,KAGzB,yBAAK3E,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,uBACZvB,KAAK,SACLoB,MAAO6B,EACPhC,SAAUA,EACVQ,UAAQ,KAGZ,yBAAK/B,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,0BACZvB,KAAK,SACLoB,MAAO8B,EACPjC,SAAUA,EACVQ,UAAQ,KAGZ,yBAAK/B,UAAU,cACb,2BACEjB,KAAK,OACL8C,YAAY,iBACZvB,KAAK,eACLoB,MAAOuE,EACP1E,SAAUA,KAGd,yBAAKvB,UAAU,cACb,yCACA,2BAAOjB,KAAK,OAAOuB,KAAK,OAAOoB,MAAOwB,EAAM3B,SAAUA,KAExD,yBAAKvB,UAAU,cACb,2BACE,2BACEjB,KAAK,WACLuB,KAAK,UACLsF,QAASJ,EACT9D,MAAO8D,EACPjE,SAAU,kBACRD,EAAY,eAAKD,EAAN,CAAgBmE,SAAUnE,EAASmE,cAE/C,IATL,mBAaF,yBAAKxF,UAAU,cACb,uCACA,2BACEjB,KAAK,OACLuB,KAAK,KACLoB,MAAO3B,EACPwB,SAAUA,EACVsE,SAAUL,KAGd,yBAAKxF,UAAU,cACb,8BACEM,KAAK,cACLwF,KAAK,KACLC,KAAK,IACLlE,YAAY,sBACZH,MAAO+D,EACPlE,SAAUA,KAGd,2BAAOxC,KAAK,SAASiB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iB,iBCxEOmG,EArCK,SAAC,GAQd,IAAD,IAPJzC,QAOI,IANFI,KAAQjB,EAMN,EANMA,IAAKtC,EAMX,EANWA,KAAM6F,EAMjB,EANiBA,OACnB/D,EAKE,EALFA,OACAS,EAIE,EAJFA,QACAoB,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAGF,OACE,yBAAKlE,UAAU,oBACb,yBAAKoG,IAAKD,EAAQE,IAAI,GAAGrG,UAAU,cACnC,6BACE,4BAAKM,GACL,2BACG8B,EADH,IACYS,GAAW,qCAAWA,IAElC,uBAAG7C,UAAU,QAAQiE,GAAY,8BAAOA,IACxC,kBAAC,IAAD,CAAMlE,GAAE,mBAAc6C,GAAO5C,UAAU,mBAAvC,iBAIF,4BACGkE,EAAOoC,MAAM,EAAG,GAAG7D,KAAI,SAAC8D,EAAOC,GAAR,OACtB,wBAAI7D,IAAK6D,EAAOxG,UAAU,gBACxB,uBAAGA,UAAU,iBADf,IACkCuG,SCkB7B/G,eAJS,SAACC,GAAD,MAAY,CAClCgE,QAAShE,EAAMgE,WAGuB,CAAEgD,YRff,yDAAM,WAAO7H,GAAP,eAAAO,EAAA,6DAC/BP,EAAS,CAAEG,KPnBgB,kBOkBI,kBAIXK,IAAMC,IAAI,gBAJC,OAIvBC,EAJuB,OAM7BV,EAAS,CACPG,KP7BsB,eO8BtBC,QAASM,EAAIC,OARc,gDAW7BX,EAAS,CACPG,KP7BuB,gBO8BvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAbnC,yDAAN,wDQeZ5C,EAxCE,SAAC,GAAqD,IAAnDiH,EAAkD,EAAlDA,YAAkD,IAArChD,QAAWiD,EAA0B,EAA1BA,SAAU7G,EAAgB,EAAhBA,QAKpD,OAJAiE,qBAAU,WACR2C,MACC,CAACA,IAGF,kBAAC,WAAD,KACG5G,EACC,kBAAC,IAAD,MAEA,kBAAC,WAAD,KACE,wBAAIG,UAAU,sBAAd,cACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,0BADf,uCAIA,yBAAKA,UAAU,YACZ0G,EAASC,OAAS,EACjBD,EAASjE,KAAI,SAACgB,GAAD,OACX,kBAAC,EAAD,CAAad,IAAKc,EAAQb,IAAKa,QAASA,OAG1C,0D,iBCICmD,EA9BM,SAAC,GAAD,QACnBnD,QACEW,EAFiB,EAEjBA,IACAF,EAHiB,EAGjBA,OACQ5D,EAJS,EAIjBuD,KAAQvD,KAJS,OAOnB,yBAAKN,UAAU,8BACZoE,GACC,kBAAC,WAAD,KACE,wBAAIpE,UAAU,gBAAgBM,EAAKuG,OAAOC,MAAM,KAAK,GAArD,SACA,2BAAI1C,GACJ,yBAAKpE,UAAU,UAGnB,wBAAIA,UAAU,gBAAd,aACA,yBAAKA,UAAU,UACZkE,EAAOzB,KAAI,SAAC8D,EAAOC,GAAR,OACV,yBAAKxG,UAAU,MAAM2C,IAAK6D,GACxB,uBAAGxG,UAAU,iBADf,IACkCuG,SCQ3BQ,EAzBW,SAAC,GAAD,QACxBxE,WAAcM,EADU,EACVA,QAASC,EADC,EACDA,MAAOmB,EADN,EACMA,SAAmBlE,GADzB,EACgByF,QADhB,EACyBzF,IAAImD,EAD7B,EAC6BA,KAAMuC,EADnC,EACmCA,YADnC,OAGxB,6BACE,wBAAIzF,UAAU,aAAa6C,GAC3B,2BACE,kBAAC,IAAD,CAAQE,OAAO,cAAcC,IAAOC,IAAIC,IAD1C,KAC4D,IACxDnD,EAAc,kBAAC,IAAD,CAAQgD,OAAO,cAAcC,IAAOC,IAAIlD,IAAjD,QAET,2BACE,8CADF,IAC+B+C,GAE/B,2BACE,8CADF,IAC+BmB,GAE/B,2BACE,iDADF,IACkCwB,KCSvBuB,EAzBU,SAAC,GAAD,QACvB5D,UAAaG,EADU,EACVA,OAAQC,EADE,EACFA,OAAQyC,EADN,EACMA,aAAuBlG,GAD7B,EACoByF,QADpB,EAC6BzF,IAAImD,EADjC,EACiCA,KAAMuC,EADvC,EACuCA,YADvC,OAGvB,6BACE,wBAAIzF,UAAU,aAAauD,GAC3B,2BACE,kBAAC,IAAD,CAAQR,OAAO,cAAcC,IAAOC,IAAIC,IAD1C,KAC4D,IACxDnD,EAAc,kBAAC,IAAD,CAAQgD,OAAO,cAAcC,IAAOC,IAAIlD,IAAjD,QAET,2BACE,4CADF,IAC6ByD,GAE7B,2BACE,oDADF,IACqCyC,GAErC,2BACE,iDADF,IACkCR,KCwCvBwB,EA1DI,SAAC,GASb,IAAD,IARJxD,QACErB,EAOE,EAPFA,OACAS,EAME,EANFA,QACAoB,EAKE,EALFA,SACAD,EAIE,EAJFA,QACAkB,EAGE,EAHFA,OAGE,IAFFrB,KAAQvD,EAEN,EAFMA,KAAM6F,EAEZ,EAFYA,OAGhB,OACE,yBAAKnG,UAAU,8BACb,yBAAKA,UAAU,iBAAiBoG,IAAKD,EAAQE,IAAI,KACjD,wBAAIrG,UAAU,SAASM,GACvB,uBAAGN,UAAU,QACVoC,EADH,IACYS,GAAW,qCAAWA,IAElC,2BAAIoB,GAAY,8BAAOA,IACvB,yBAAKjE,UAAU,cACZgE,GACC,uBAAG9D,KAAM8D,EAASvC,OAAO,SAASyF,IAAI,uBACpC,uBAAGlH,UAAU,wBAGhBkF,GAAUA,EAAOb,SAChB,uBAAGnE,KAAMgF,EAAOb,QAAS5C,OAAO,SAASyF,IAAI,uBAC3C,uBAAGlH,UAAU,0BAGhBkF,GAAUA,EAAOZ,UAChB,uBAAGpE,KAAMgF,EAAOZ,SAAU7C,OAAO,SAASyF,IAAI,uBAC5C,uBAAGlH,UAAU,2BAGhBkF,GAAUA,EAAOX,UAChB,uBAAGrE,KAAMgF,EAAOX,SAAU9C,OAAO,SAASyF,IAAI,uBAC5C,uBAAGlH,UAAU,2BAGhBkF,GAAUA,EAAOV,SAChB,uBAAGtE,KAAMgF,EAAOV,QAAS/C,OAAO,SAASyF,IAAI,uBAC3C,uBAAGlH,UAAU,0BAGhBkF,GAAUA,EAAOT,WAChB,uBAAGvE,KAAMgF,EAAOT,UAAWhD,OAAO,SAASyF,IAAI,uBAC7C,uBAAGlH,UAAU,+BC8CVR,eALS,SAACC,GAAD,MAAY,CAClCgE,QAAShE,EAAMgE,QACf/D,KAAMD,EAAMC,QAG0B,CAAEyH,eb5CZ,SAACC,GAAD,8CAAY,WAAOxI,GAAP,eAAAO,EAAA,+EAEpBC,IAAMC,IAAN,4BAA+B+H,IAFX,OAEhC9H,EAFgC,OAItCV,EAAS,CACPG,KP/CqB,cOgDrBC,QAASM,EAAIC,OANuB,gDAStCX,EAAS,CACPG,KP9CuB,gBO+CvBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAX1B,yDAAZ,wDa4Cf5C,EAnFC,SAAC,GAA2D,IAAzD2H,EAAwD,EAAxDA,eAA2B1D,EAA6B,EAAxCA,QAAWA,QAAW/D,EAAkB,EAAlBA,KAAM2H,EAAY,EAAZA,MAMvDC,GAAe7D,EAKrB,OAJAK,qBAAU,WACRqD,EAAeE,EAAME,OAAO1I,MAC3B,CAACsI,EAAgBE,EAAME,OAAO1I,GAAIyI,IAGnC,kBAAC,WAAD,KACe,OAAZ7D,EACC,kBAAC,IAAD,MAEA,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM1D,GAAG,YAAYC,UAAU,iBAA/B,oBAGCN,EAAKE,kBACa,IAAjBF,EAAKG,SACLH,EAAKmE,KAAKjB,MAAQa,EAAQI,KAAKjB,KAC7B,kBAAC,IAAD,CAAM7C,GAAG,gBAAgBC,UAAU,gBAAnC,gBAIJ,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAYyD,QAASA,IACrB,kBAAC,EAAD,CAAcA,QAASA,IACvB,yBAAKzD,UAAU,4BACb,wBAAIA,UAAU,gBAAd,cACCyD,EAAQlB,WAAWoE,OAAS,EAC3B,kBAAC,WAAD,KACGlD,EAAQlB,WAAWE,KAAI,SAACF,GAAD,OACtB,kBAAC,EAAD,CACEI,IAAKJ,EAAWK,IAChBL,WAAYA,QAKlB,0DAIJ,yBAAKvC,UAAU,4BACb,wBAAIA,UAAU,gBAAd,aACCyD,EAAQL,UAAUuD,OAAS,EAC1B,kBAAC,WAAD,KACGlD,EAAQL,UAAUX,KAAI,SAACW,GAAD,OACrB,kBAAC,EAAD,CACET,IAAKS,EAAUR,IACfQ,UAAWA,QAKjB,yDAIHK,EAAQU,gBACP,kBAACqD,EAAD,CAAeC,SAAUhE,EAAQU,uBCpEzCuD,EAAW,SAAC,GAAD,IACfC,EADe,EACfA,QACAC,EAFe,EAEfA,WACAC,EAHe,EAGfA,WACAnI,EAJe,EAIfA,KAJe,IAKfoB,KAAQ8B,EALO,EAKPA,IAAKkF,EALE,EAKFA,KAAMxH,EALJ,EAKIA,KAAM6F,EALV,EAKUA,OAAQtC,EALlB,EAKkBA,KAAMkE,EALxB,EAKwBA,MAAOC,EAL/B,EAK+BA,SAAUC,EALzC,EAKyCA,KACxDC,EANe,EAMfA,YANe,OAQf,yBAAKlI,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAc8D,IACpB,yBAAK7D,UAAU,YAAYoG,IAAKD,EAAQE,IAAI,KAC5C,4BAAK/F,KAGT,6BACE,uBAAGN,UAAU,QAAQ8H,GACrB,uBAAG9H,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQ+C,OAAO,cAAckF,IAGxCC,GACC,kBAAC,WAAD,KACE,4BACEjI,QAAS,kBAAM0H,EAAQ/E,IACvB7D,KAAK,SACLiB,UAAU,iBAEV,uBAAGA,UAAU,qBAAsB,IACnC,8BAAO+H,EAAMpB,OAAS,GAAK,8BAAOoB,EAAMpB,UAE1C,4BACE1G,QAAS,kBAAM2H,EAAWhF,IAC1B7D,KAAK,SACLiB,UAAU,iBAEV,uBAAGA,UAAU,wBAEf,kBAAC,IAAD,CAAMD,GAAE,iBAAY6C,GAAO5C,UAAU,mBAArC,aACa,IACVgI,EAASrB,OAAS,GACjB,0BAAM3G,UAAU,iBAAiBgI,EAASrB,UAG5CjH,EAAKG,SAAWgE,IAASnE,EAAKmE,KAAKjB,KACnC,4BACE3C,QAAS,kBAAM4H,EAAWjF,IAC1B7D,KAAK,SACLiB,UAAU,kBAEV,uBAAGA,UAAU,sBAS3B0H,EAASS,aAAe,CACtBD,aAAa,GAYf,IAIe1I,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAEiI,QCpDnB,SAAC9I,GAAD,8CAAQ,WAAOD,GAAP,eAAAO,EAAA,+EAETC,IAAMmG,IAAN,0BAA6B1G,IAFpB,OAErBS,EAFqB,OAI3BV,EAAS,CACPG,KtBhBsB,esBiBtBC,QAAS,CAAEH,KAAIkJ,MAAOzI,EAAIC,QAND,gDAS3BX,EAAS,CACPG,KtBtBoB,asBuBpBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAXrC,yDAAR,uDDoD4BwF,WCnCzB,SAAC/I,GAAD,8CAAQ,WAAOD,GAAP,eAAAO,EAAA,+EAEZC,IAAMmG,IAAN,4BAA+B1G,IAFnB,OAExBS,EAFwB,OAI9BV,EAAS,CACPG,KtBjCsB,esBkCtBC,QAAS,CAAEH,KAAIkJ,MAAOzI,EAAIC,QANE,gDAS9BX,EAAS,CACPG,KtBvCoB,asBwCpBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAXlC,yDAAR,uDDmCqCyF,WClBrC,SAAChJ,GAAD,8CAAQ,WAAOD,GAAP,SAAAO,EAAA,+EAExBC,IAAMkD,OAAN,qBAA2BzD,IAFH,OAI9BD,EAAS,CACPG,KtBjDqB,csBkDrBC,QAASH,IAGXD,EAASJ,EAAS,eAAgB,YATJ,gDAW9BI,EAAS,CACPG,KtB1DoB,asB2DpBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAblC,yDAAR,wDDkBX5C,CACbkI,GE5CalI,cAAQ,KAAM,CAAE4I,QD4CR,SAAC/G,GAAD,8CAAc,WAAOzC,GAAP,iBAAAO,EAAA,6DAC7BsB,EAAS,CACbC,QAAS,CACP,eAAgB,qBAHe,kBAQftB,IAAM0B,KAAK,aAAcO,EAAUZ,GARpB,OAQ3BnB,EAR2B,OAUjCV,EAAS,CACPG,KtBzEkB,WsB0ElBC,QAASM,EAAIC,OAGfX,EAASJ,EAAS,eAAgB,YAfD,gDAiBjCI,EAAS,CACPG,KtBnFoB,asBoFpBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAnB/B,yDAAd,wDC5CR5C,EAnCE,SAAC,GAAiB,IAAf4I,EAAc,EAAdA,QAAc,EACRjH,mBAAS,IADD,mBACzB2G,EADyB,KACnBO,EADmB,KAGhC,OACE,yBAAKrI,UAAU,aACb,yBAAKA,UAAU,gBACb,iDAEF,0BACEA,UAAU,YACV2B,SAAU,SAACH,GACTA,EAAEI,iBACFwG,EAAQ,CAAEN,SACVO,EAAQ,MAGV,8BACE/H,KAAK,OACLwF,KAAK,KACLC,KAAK,IACLlE,YAAY,gBACZH,MAAOoG,EACPvG,SAAU,SAACC,GAAD,OAAO6G,EAAQ7G,EAAEC,OAAOC,QAClCK,UAAQ,IAEV,2BAAOhD,KAAK,SAASiB,UAAU,oBAAoB0B,MAAM,gBCOlDlC,gBAJS,SAACC,GAAD,MAAY,CAClCqB,KAAMrB,EAAMqB,QAG0B,CAAEwH,SFvBlB,yDAAM,WAAO1J,GAAP,eAAAO,EAAA,+EAERC,IAAMC,IAAI,cAFF,OAEpBC,EAFoB,OAI1BV,EAAS,CACPG,KtBFmB,YsBGnBC,QAASM,EAAIC,OANW,gDAS1BX,EAAS,CACPG,KtBLoB,asBMpBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAXtC,yDAAN,wDEuBT5C,EA9BD,SAAC,GAAmC,IAAjC8I,EAAgC,EAAhCA,SAAkBC,EAAc,EAAtBzH,KAAQyH,MAKjC,OAJAzE,qBAAU,WACRwE,MACC,CAACA,IAGF,kBAAC,WAAD,KACE,wBAAItI,UAAU,sBAAd,SACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,6BAGA,kBAAC,EAAD,MACA,yBAAKA,UAAU,SACZuI,EAAM9F,KAAI,SAAC3B,GAAD,OACT,kBAAC,EAAD,CAAU6B,IAAK7B,EAAK8B,IAAK9B,KAAMA,YC4B1BtB,gBAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAE8I,cH0Gb,SAACC,EAAQC,GAAT,8CAAuB,WAAO9J,GAAP,SAAAO,EAAA,+EAE1CC,IAAMkD,OAAN,6BAAmCmG,EAAnC,YAA6CC,IAFH,OAIhD9J,EAAS,CACPG,KtBxIwB,iBsByIxBC,QAAS0J,IAGX9J,EAASJ,EAAS,kBAAmB,YATW,gDAWhDI,EAAS,CACPG,KtBpJoB,asBqJpBC,QAAS,CAAEP,IAAK,KAAIuC,SAASmB,WAAYC,OAAQ,KAAIpB,SAASoB,UAbhB,yDAAvB,wDG1Gd5C,EA1CK,SAAC,GAAD,IAClBiJ,EADkB,EAClBA,OADkB,IAElBE,QAAW/F,EAFO,EAEPA,IAAKkF,EAFE,EAEFA,KAAMxH,EAFJ,EAEIA,KAAM6F,EAFV,EAEUA,OAAQtC,EAFlB,EAEkBA,KAAMoE,EAFxB,EAEwBA,KAC1CvI,EAHkB,EAGlBA,KACA8I,EAJkB,EAIlBA,cAJkB,OAMlB,yBAAKxI,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAc8D,IACpB,yBAAK7D,UAAU,YAAYoG,IAAKD,EAAQE,IAAI,KAC5C,4BAAK/F,KAGT,6BACE,uBAAGN,UAAU,QAAQ8H,GACrB,uBAAG9H,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQ+C,OAAO,cAAckF,KAEvCvI,EAAKG,SAAWgE,IAASnE,EAAKmE,KAAKjB,KACnC,4BACE3C,QAAS,kBAAMuI,EAAcC,EAAQ7F,IACrC7D,KAAK,SACLiB,UAAU,kBAEV,uBAAGA,UAAU,uB,6BCERR,gBAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAGCF,EA3BM,SAAC,GAAD,IACRoJ,EADQ,EACnBC,UADmB,IAEnBnJ,KAAQE,EAFW,EAEXA,gBAAiBC,EAFN,EAEMA,QACtBiJ,EAHgB,4CAKnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GAAD,OACNnJ,EACE,kBAAC,IAAD,MACED,EACF,kBAACgJ,EAAcI,GAEf,kBAAC,IAAD,CAAUjJ,GAAG,kBCmBNkJ,GAtBA,SAACD,GACd,OACE,6BAAShJ,UAAU,aACjB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,YAAYN,UAAWO,IACzC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASN,UAAWQ,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYN,UAAWS,IACzC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,eAAeN,UAAWU,IAC5C,kBAAC,GAAD,CAAcL,OAAK,EAACC,KAAK,aAAaN,UAAWW,IACjD,kBAAC,GAAD,CAAcN,OAAK,EAACC,KAAK,kBAAkBN,UAAWY,IACtD,kBAAC,GAAD,CAAcP,OAAK,EAACC,KAAK,gBAAgBN,UAAWY,IACpD,kBAAC,GAAD,CAAcP,OAAK,EAACC,KAAK,kBAAkBN,UAAWa,IACtD,kBAAC,GAAD,CAAcR,OAAK,EAACC,KAAK,iBAAiBN,UAAWc,IACrD,kBAAC,GAAD,CAAcT,OAAK,EAACC,KAAK,SAASN,UAAWe,KAC7C,kBAAC,GAAD,CAAcV,OAAK,EAACC,KAAK,aAAaN,UAAWgB,KACjD,kBAAC,IAAD,CAAOhB,UAAWiB,U,oCC9BpB/F,GAAe,GCSfA,GAAe,CACnBgG,MAAOC,aAAaC,QAAQ,SAC5BrK,gBAAiB,KACjBC,SAAS,EACTgE,KAAM,MCLFE,GAAe,CACnBN,QAAS,KACTiD,SAAU,GACVwD,MAAO,GACPrK,SAAS,EACTqB,MAAO,ICJH6C,GAAe,CACnBwE,MAAO,GACPzH,KAAM,KACNjB,SAAS,EACTqB,MAAO,ICTMiJ,8BAAgB,CAC7BC,MJHa,WAAyC,IAA/B3K,EAA8B,uDAAtBsE,GAAcsG,EAAQ,uCAC7CtL,EAAkBsL,EAAlBtL,KAAMC,EAAYqL,EAAZrL,QAEd,OAAQD,GACN,I5BRqB,Y4BSnB,MAAM,GAAN,oBAAWU,GAAX,CAAkBT,IACpB,I5BTwB,e4BUtB,OAAOS,EAAM6K,QAAO,SAACF,GAAD,OAAWA,EAAMvL,KAAOG,KAC9C,QACE,OAAOS,IILXC,KHUa,WAAyC,IAA/BD,EAA8B,uDAAtBsE,GAAcsG,EAAQ,uCAC7CtL,EAAkBsL,EAAlBtL,KAAMC,EAAYqL,EAAZrL,QAEd,OAAQD,GACN,I7BlBuB,c6BmBrB,OAAO,eACFU,EADL,CAEEG,iBAAiB,EACjBC,SAAS,EACTgE,KAAM7E,IAEV,I7B3B4B,mB6B4B1B,OAAO,eACFS,EADL,GAEKT,EAFL,CAGEY,iBAAiB,EACjBC,SAAS,EACTgE,KAAM7E,IAEV,I7B/ByB,gB6BgCvB,OAAO,eACFS,EADL,GAEKT,EAFL,CAGEY,iBAAiB,EACjBC,SAAS,IAEb,I7B5B2B,kB6B6BzB,OAAO,eACFJ,EADL,CAEEsK,MAAO,KACPnK,iBAAiB,EACjBC,SAAS,EACTgE,KAAM,OAEV,I7B/CsB,a6BgDtB,I7B7CkB,S6B8ChB,OAAO,eACFpE,EADL,CAEEsK,MAAO,KACPnK,iBAAiB,EACjBC,SAAS,EACTgE,KAAM,OAEV,QACE,OAAOpE,IGrDXgE,QFSa,WAAyC,IAA/BhE,EAA8B,uDAAtBsE,GAAcsG,EAAQ,uCAC7CtL,EAAkBsL,EAAlBtL,KAAMC,EAAYqL,EAAZrL,QAEd,OAAQD,GACN,I9BbuB,c8BcvB,I9BV0B,iB8BWxB,OAAO,eACFU,EADL,CAEEgE,QAASzE,EACTa,SAAS,IAEb,I9BnBwB,e8BoBtB,OAAO,eACFJ,EADL,CAEEiH,SAAU1H,EACVa,SAAS,IAEb,I9BpByB,gB8BqBvB,OAAO,eACFJ,EADL,CAEEyB,MAAOlC,EACPa,SAAS,EACT4D,QAAS,OAEb,I9B5ByB,gB8B6BvB,OAAO,eACFhE,EADL,CAEEgE,QAAS,KACTyG,MAAO,GACPrK,SAAS,IAEb,I9BtCqB,Y8BuCnB,OAAO,eACFJ,EADL,CAEEyK,MAAOlL,EACPa,SAAS,IAEb,I9B3CoB,W8B4ClB,OAAO,eACFJ,EADL,CAEEyK,MAAO,KAEX,QACE,OAAOzK,IEnDXqB,KDQa,WAAyC,IAA/BrB,EAA8B,uDAAtBsE,GAAcsG,EAAQ,uCAC7CtL,EAAkBsL,EAAlBtL,KAAMC,EAAYqL,EAAZrL,QAEd,OAAQD,GACN,I/BLqB,Y+BMnB,OAAO,eACFU,EADL,CAEE8I,MAAOvJ,EACPa,SAAS,IAEb,I/BVoB,W+BWlB,OAAO,eACFJ,EADL,CAEEqB,KAAM9B,EACNa,SAAS,IAEb,I/BZoB,W+BalB,OAAO,eACFJ,EADL,CAEE8I,MAAM,CAAEvJ,GAAH,oBAAeS,EAAM8I,QAC1B1I,SAAS,IAEb,I/BnBuB,c+BoBrB,OAAO,eACFJ,EADL,CAEE8I,MAAO9I,EAAM8I,MAAM+B,QAAO,SAACxJ,GAAD,OAAUA,EAAK8B,MAAQ5D,KACjDa,SAAS,IAEb,I/B3BsB,a+B4BpB,OAAO,eACFJ,EADL,CAEEyB,MAAOlC,EACPa,SAAS,IAEb,I/BhCwB,e+BiCtB,OAAO,eACFJ,EADL,CAEE8I,MAAO9I,EAAM8I,MAAM9F,KAAI,SAAC3B,GAAD,OACrBA,EAAK8B,MAAQ5D,EAAQH,GAArB,eAA+BiC,EAA/B,CAAqCiH,MAAO/I,EAAQ+I,QAAUjH,KAEhEjB,SAAS,IAEb,I/BrCuB,c+BsCrB,OAAO,eACFJ,EADL,CAEEqB,KAAK,eAAMrB,EAAMqB,KAAb,CAAmBkH,SAAUhJ,IACjCa,SAAS,IAEb,I/B1C0B,iB+B2CxB,OAAO,eACFJ,EADL,CAEEqB,KAAK,eACArB,EAAMqB,KADP,CAEFkH,SAAUvI,EAAMqB,KAAKkH,SAASsC,QAC5B,SAAC3B,GAAD,OAAaA,EAAQ/F,MAAQ5D,OAGjCa,SAAS,IAEb,QACE,OAAOJ,MElEE8K,GAVM,SAACR,GAChBA,GACF3K,IAAMoL,SAAS9J,QAAQ+J,OAAO,gBAAkBV,EAChDC,aAAaU,QAAQ,QAASX,YAEvB3K,IAAMoL,SAAS9J,QAAQ+J,OAAO,gBACrCT,aAAaW,WAAW,WCAtBC,GAAa,CAACC,MAEdC,GAAQC,uBACZC,GALmB,GAOnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MAOrCO,GAAe,CACjBzL,KAAM,CAAEqK,MAAO,KAAMnK,gBAAiB,KAAMC,SAAS,EAAMgE,KAAM,OAGnEiH,GAAMM,WAAU,WAEd,IAAIC,EAAgBF,GAGpB,GAFAA,GAAeL,GAAMQ,WAEjBD,EAAc3L,KAAKqK,QAAUoB,GAAazL,KAAKqK,MAAO,CACxD,IAAMA,EAAQoB,GAAazL,KAAKqK,MAChCQ,GAAaR,OAIFe,UCDAS,I,MAvBH,WAMV,OALAzH,qBAAU,WACRyG,GAAaP,aAAaD,OAC1Be,GAAMlM,SAASM,OACd,IAGD,kBAAC,IAAD,CAAU4L,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5B,OAAK,EAACC,KAAK,IAAIN,UAAWzI,IACjC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyI,UAAWI,YCrBhCuC,IAASzC,OAAO,kBAAC,GAAD,MAAS0C,SAASC,eAAe,W","file":"static/js/main.2bfec5cb.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\n  const id = uuidv4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const NO_REPOS = \"NO_REPOS\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_POST = \"GET_POST\";\nexport const POST_ERROR = \"POST_ERROR\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from \"./types\";\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout / Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Ironhackers</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user' />{\" \"}\n          <span className='hide-sm'>Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} href='#!'>\n          <i className='fas fa-sign-out-alt' />{\" \"}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Ironhackers</Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fab fa-react'></i> Facecooding\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Connecting Developers Globaly</h1>\n          <p className='lead'>\n            Create your personal Profile <br />\n            Share your Portafolio <br /> Help other Developers\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Landing;\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Create Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardActions = () => {\n  return (\n    <div className='dash-buttons'>\n      <Link to='/edit-profile' className='btn btn-light'>\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\n      </Link>\n      <Link to='/add-experience' className='btn btn-light'>\n        <i className='fab fa-black-tie text-primary' /> Add Experience\n      </Link>\n      <Link to='/add-education' className='btn btn-light'>\n        <i className='fas fa-graduation-cap text-primary' /> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS,\n  NO_REPOS,\n} from \"./types\";\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS,\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/profile\", formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      await axios.delete(\"/api/profile\");\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { deleteExperience } from \"../../actions/profile\";\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{moment.utc(exp.from)}</Moment> -{\" \"}\n        {exp.to === null ? (\n          \" Now\"\n        ) : (\n          <Moment format='YYYY/MM/DD'>{moment.utc(exp.to)}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { deleteEducation } from \"../../actions/profile\";\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{moment.utc(edu.from)}</Moment> -{\" \"}\n        {edu.to === null ? (\n          \" Now\"\n        ) : (\n          <Moment format='YYYY/MM/DD'>{moment.utc(edu.to)}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst initialState = {\n  company: \"\",\n  website: \"\",\n  location: \"\",\n  status: \"\",\n  skills: \"\",\n  githubusername: \"\",\n  bio: \"\",\n  twitter: \"\",\n  facebook: \"\",\n  linkedin: \"\",\n  youtube: \"\",\n  instagram: \"\",\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      if (Array.isArray(profileData.skills))\n        profileData.skills = profileData.skills.join(\", \");\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, profile ? true : false);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Edit Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Add some changes to your profile\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={onChange}>\n            <option>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={onChange}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(ProfileForm)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    title: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch' /> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    description,\n    current,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() =>\n                setFormData({ ...formData, current: !formData.current })\n              }\n            />{\" \"}\n            Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'>{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check' /> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No profiles found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name.trim().split(\" \")[0]}s Bio</h2>\n        <p>{bio}</p>\n        <div className='line' />\n      </Fragment>\n    )}\n    <h2 className='text-primary'>Skill Set</h2>\n    <div className='skills'>\n      {skills.map((skill, index) => (\n        <div className='p-1' key={index}>\n          <i className='fas fa-check' /> {skill}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => (\n  <div>\n    <h3 className='text-dark'>{company}</h3>\n    <p>\n      <Moment format='YYYY/MM/DD'>{moment.utc(from)}</Moment> -{\" \"}\n      {!to ? \" Now\" : <Moment format='YYYY/MM/DD'>{moment.utc(to)}</Moment>}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <p>\n      <strong>Location: </strong> {location}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => (\n  <div>\n    <h3 className='text-dark'>{school}</h3>\n    <p>\n      <Moment format='YYYY/MM/DD'>{moment.utc(from)}</Moment> -{\" \"}\n      {!to ? \" Now\" : <Moment format='YYYY/MM/DD'>{moment.utc(to)}</Moment>}\n    </p>\n    <p>\n      <strong>Degree: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field Of Study: </strong> {fieldofstudy}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x' />\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x' />\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x' />\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x' />\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x' />\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x' />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n  /*\n   use a nullProfile boolean to safely add to useEffect\n   adding profile to useEffect would trigger the function\n   as profile is an object and object's are reference types\n*/\n  const nullProfile = !profile;\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id, nullProfile]);\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-up' />{\" \"}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-down' />\n          </button>\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Discussion{\" \"}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times' />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts\", formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addPost({ text });\n          setText(\"\");\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome to the community\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times' />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Layout/Spinner\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      loading ? (\n        <Spinner />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/login' />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Register from \"../auth/Register\";\nimport Login from \"../auth/Login\";\nimport Alert from \"../Layout/Alert\";\nimport Dashboard from \"../dashbord/Dashbord\";\nimport ProfileForm from \"../profile-forms/ProfileForm\";\nimport AddExperience from \"../profile-forms/AddExperience\";\nimport AddEducation from \"../profile-forms/AddEducation\";\nimport Profiles from \"../profiles/Profiles\";\nimport Profile from \"../profile/Profile\";\nimport Posts from \"../posts/Posts\";\nimport Post from \"../post/Post\";\nimport NotFound from \"../Layout/NotFound\";\nimport PrivateRoute from \"../routing/PrivateRoute\";\n\nconst Routes = (props) => {\n  return (\n    <section className='container'>\n      <Alert />\n      <Switch>\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/profiles' component={Profiles} />\n        <Route exact path='/profile/:id' component={Profile} />\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n        <PrivateRoute exact path='/create-profile' component={ProfileForm} />\n        <PrivateRoute exact path='/edit-profile' component={ProfileForm} />\n        <PrivateRoute exact path='/add-experience' component={AddExperience} />\n        <PrivateRoute exact path='/add-education' component={AddEducation} />\n        <PrivateRoute exact path='/posts' component={Posts} />\n        <PrivateRoute exact path='/posts/:id' component={Post} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  //REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  //LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case ACCOUNT_DELETED:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    case AUTH_ERROR:\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  NO_REPOS,\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    case NO_REPOS:\n      return {\n        ...state,\n        repos: [],\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n        },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./post\";\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post,\n});\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n    localStorage.setItem(\"token\", token);\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n    localStorage.removeItem(\"token\");\n  }\n};\n\nexport default setAuthToken;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// set up a store subscription listener\n// to store the users token in localStorage\n\n// prevent auth error on first run of subscription\nlet currentState = {\n  auth: { token: null, isAuthenticated: null, loading: true, user: null },\n};\n\nstore.subscribe(() => {\n  // keep track of the previous and current state to compare changes\n  let previousState = currentState;\n  currentState = store.getState();\n  // if the token changes set the value in localStorage and axios headers\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token;\n    setAuthToken(token);\n  }\n});\n\nexport default store;\n","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport Landing from \"./components/Layout/Landing\";\nimport Routes from \"./components/routing/Routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport \"./App.css\";\n\nconst App = () => {\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Router>\n              <Route component={Routes} />\n            </Router>\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}